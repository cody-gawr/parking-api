name: Parkings
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/parkings/closest
    metadata:
      groupName: Parkings
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Find the closest parking within 500 meters.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      latitude:
        name: latitude
        description: 'Latitude of the point to search from. Must be between -90 and 90.'
        required: true
        example: 40.7128
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      longitude:
        name: longitude
        description: 'Longitude of the point to search from. Must be between -180 and 180.'
        required: true
        example: -74.006
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      Request:
        name: Request
        description: ''
        required: false
        example: consequatur
        type: \App\Http\Requests\Parking\ClosestParkingRequest
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      latitude: 40.7128
      longitude: -74.006
      Request: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "id": 14,
              "name": "Downtown Lot",
              "address": "123 Main St",
              "latitude": 40.712776,
              "longitude": -74.005974,
              "created_at": "2025-08-06T13:08:52.000000Z",
              "updated_at": "2025-08-06T13:08:52.000000Z",
              "distance": 3.453087949685015
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |
          {
              "message": "No parking found within 500m"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/parkings
    metadata:
      groupName: Parkings
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List all parkings.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          [
              {
                  "id": 1,
                  "name": "Abshire LLC Parking",
                  "address": "5166 Frami Manor Apt. 071",
                  "latitude": 4.82169,
                  "longitude": 61.785464,
                  "created_at": "2025-08-06T12:46:58.000000Z",
                  "updated_at": "2025-08-06T12:46:58.000000Z"
              },
              {
                  "id": 2,
                  "name": "Abernathy and Sons Parking",
                  "address": "3800 Clay Mountain",
                  "latitude": 55.621738,
                  "longitude": -175.364549,
                  "created_at": "2025-08-06T12:46:59.000000Z",
                  "updated_at": "2025-08-06T12:46:59.000000Z"
              },
              {
                  "id": 3,
                  "name": "Rolfson, Rau and Tillman Parking",
                  "address": "6457 Fermin Prairie Suite 511",
                  "latitude": -57.152625,
                  "longitude": 15.663286,
                  "created_at": "2025-08-06T12:46:59.000000Z",
                  "updated_at": "2025-08-06T12:46:59.000000Z"
              },
              {
                  "id": 4,
                  "name": "Lang-Kuphal Parking",
                  "address": "560 Morar Underpass",
                  "latitude": -20.578386,
                  "longitude": -116.938252,
                  "created_at": "2025-08-06T12:46:59.000000Z",
                  "updated_at": "2025-08-06T12:46:59.000000Z"
              },
              {
                  "id": 5,
                  "name": "Bayer Group Parking",
                  "address": "46208 Brekke Spring",
                  "latitude": -75.843874,
                  "longitude": -64.331612,
                  "created_at": "2025-08-06T12:46:59.000000Z",
                  "updated_at": "2025-08-06T12:46:59.000000Z"
              },
              {
                  "id": 6,
                  "name": "Weimann PLC Parking",
                  "address": "291 Brianne Land",
                  "latitude": 85.073311,
                  "longitude": 145.627981,
                  "created_at": "2025-08-06T12:46:59.000000Z",
                  "updated_at": "2025-08-06T12:46:59.000000Z"
              },
              {
                  "id": 7,
                  "name": "Grant Ltd Parking",
                  "address": "1061 Birdie Rest",
                  "latitude": -79.166444,
                  "longitude": -28.811028,
                  "created_at": "2025-08-06T12:47:00.000000Z",
                  "updated_at": "2025-08-06T12:47:00.000000Z"
              },
              {
                  "id": 8,
                  "name": "Bogan Inc Parking",
                  "address": "448 Salma Dale Apt. 878",
                  "latitude": -76.822571,
                  "longitude": -144.395346,
                  "created_at": "2025-08-06T12:47:00.000000Z",
                  "updated_at": "2025-08-06T12:47:00.000000Z"
              },
              {
                  "id": 9,
                  "name": "Roob-Schiller Parking",
                  "address": "3633 Matteo Walk",
                  "latitude": 53.650758,
                  "longitude": 109.641045,
                  "created_at": "2025-08-06T12:47:00.000000Z",
                  "updated_at": "2025-08-06T12:47:00.000000Z"
              },
              {
                  "id": 10,
                  "name": "Spinka LLC Parking",
                  "address": "2863 Cummings Islands Suite 055",
                  "latitude": 68.279668,
                  "longitude": 151.279583,
                  "created_at": "2025-08-06T12:47:00.000000Z",
                  "updated_at": "2025-08-06T12:47:00.000000Z"
              },
              {
                  "id": 11,
                  "name": "Nearby Parking A",
                  "address": "100 Test St",
                  "latitude": 40.7153,
                  "longitude": -74.0035,
                  "created_at": "2025-08-06T12:47:00.000000Z",
                  "updated_at": "2025-08-06T12:47:00.000000Z"
              },
              {
                  "id": 12,
                  "name": "Nearby Parking B",
                  "address": "200 Test Ave",
                  "latitude": 40.7093,
                  "longitude": -74.003,
                  "created_at": "2025-08-06T12:47:01.000000Z",
                  "updated_at": "2025-08-06T12:47:01.000000Z"
              },
              {
                  "id": 13,
                  "name": "Distant Parking",
                  "address": "300 Faraway Rd",
                  "latitude": 40.7228,
                  "longitude": -73.996,
                  "created_at": "2025-08-06T12:47:01.000000Z",
                  "updated_at": "2025-08-06T12:47:01.000000Z"
              }
          ]
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/parkings
    metadata:
      groupName: Parkings
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new parking.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the parking lot. Must not be greater than 255 characters.'
        required: true
        example: 'Central Parking'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: 'The address of the parking lot. Must not be greater than 500 characters.'
        required: true
        example: '123 Main St, Springfield'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      latitude:
        name: latitude
        description: 'Latitude coordinate between -90 and 90. Must be between -90 and 90.'
        required: true
        example: 40.7128
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      longitude:
        name: longitude
        description: 'Longitude coordinate between -180 and 180. Must be between -180 and 180.'
        required: true
        example: -74.006
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      Request:
        name: Request
        description: ''
        required: false
        example: consequatur
        type: \App\Http\Requests\Parking\StoreParkingRequest
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Central Parking'
      address: '123 Main St, Springfield'
      latitude: 40.7128
      longitude: -74.006
      Request: consequatur
    fileParameters: []
    responses:
      -
        status: 201
        content: |
          {
              "name": "Downtown Lot",
              "address": "123 Main St",
              "latitude": 40.712776,
              "longitude": -74.005974,
              "updated_at": "2025-08-06T23:55:40.000000Z",
              "created_at": "2025-08-06T23:55:40.000000Z",
              "id": 15
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |
          {
              "success": false,
              "error": "Validation Failed",
              "messages": {
                  "longitude": ["The longitude field is required."]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/parkings/{id}'
    metadata:
      groupName: Parkings
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a parking by ID.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the parking.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "id": 2,
              "name": "Abernathy and Sons Parking",
              "address": "3800 Clay Mountain",
              "latitude": 55.621738,
              "longitude": -175.364549,
              "created_at": "2025-08-06T12:46:59.000000Z",
              "updated_at": "2025-08-06T12:46:59.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |
          {
              "success": false,
              "error": "Not Found",
              "message": "Parking #21 not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/parkings/{id}'
    metadata:
      groupName: Parkings
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a parking.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the parking.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'New name for the parking lot (optional). Must not be greater than 255 characters.'
        required: true
        example: 'Updated Parking Name'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: 'New address for the parking lot (optional). Must not be greater than 255 characters.'
        required: true
        example: '456 Elm St, Springfield'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      latitude:
        name: latitude
        description: 'New latitude coordinate (optional). Must be between -90 and 90.'
        required: true
        example: 40.7138
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      longitude:
        name: longitude
        description: 'New longitude coordinate (optional). Must be between -180 and 180.'
        required: true
        example: -74.0055
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      Request:
        name: Request
        description: ''
        required: false
        example: consequatur
        type: \App\Http\Requests\Parking\UpdateParkingRequest
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Updated Parking Name'
      address: '456 Elm St, Springfield'
      latitude: 40.7138
      longitude: -74.0055
      Request: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "id": 5,
              "name": "Uptown Garage",
              "address": "456 Elm St",
              "latitude": -75.843874,
              "longitude": -64.331612,
              "created_at": "2025-08-06T12:46:59.000000Z",
              "updated_at": "2025-08-06T23:50:40.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |
          {
              "success": false,
              "error": "Validation Failed",
              "messages": {
                  "address": ["The address field is required."]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/parkings/{id}'
    metadata:
      groupName: Parkings
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a parking.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the parking.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |
          {
              "success": false,
              "error": "Not Found",
              "message": "Parking #141 not found."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
