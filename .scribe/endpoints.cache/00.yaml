## Autogenerated by Scribe. DO NOT MODIFY.

name: Authentication
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/register
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user and issue a Sanctum token.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Full name of the user. Must not be greater than 255 characters.'
        required: true
        example: 'Jane Doe'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Valid, unique email address for the user. Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: jane.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Password (minimum 8 characters). Must be at least 8 characters.'
        required: true
        example: secretPass123
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      Request:
        name: Request
        description: ''
        required: false
        example: consequatur
        type: \App\Http\Requests\Auth\RegisterRequest
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Jane Doe'
      email: jane.doe@example.com
      password: secretPass123
      Request: consequatur
    fileParameters: []
    responses:
      -
        status: 201
        content: |
          {
              "user": {
                  "name": "Gawr",
                  "email": "gawr@jeeve.com.au",
                  "updated_at": "2025-08-06T13:00:38.000000Z",
                  "created_at": "2025-08-06T13:00:38.000000Z",
                  "id": 15
              },
              "access_token": "7|xAHkl6dxxHSnqZFhgC1Kf5xO5iVerO5KrRvVjNJSbd83a965",
              "token_type": "Bearer"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |
          {
              "success": false,
              "error": "Validation Failed",
              "messages": {
                  "email": ["The email has already been taken."],
                  "password": ["The password field confirmation does not match."]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Login and receive a Sanctum token.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Valid, unique email address. Must be a valid email address.'
        required: true
        example: jane@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Password (min 8 chars).'
        required: true
        example: 'O[2UZ5ij-e/dl4m{o,'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      Request:
        name: Request
        description: ''
        required: false
        example: consequatur
        type: \App\Http\Requests\Auth\LoginRequest
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: jane@example.com
      password: 'O[2UZ5ij-e/dl4m{o,'
      Request: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "user": {
                  "id": 5,
                  "name": "Admin User",
                  "email": "admin@gmail.com",
                  "email_verified_at": "2025-08-06T12:46:56.000000Z",
                  "created_at": "2025-08-06T12:46:56.000000Z",
                  "updated_at": "2025-08-06T12:46:56.000000Z"
              },
              "access_token": "5|KJGr3sXxtrWKxgccyehPcU1Atx86yy7gbIfMLBOP73454ee0",
              "token_type": "Bearer"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |
          {
              "message": "Invalid credentials"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/logout
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout (revoke the current token).'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "success": true,
              "message": "Logged out successfully."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
